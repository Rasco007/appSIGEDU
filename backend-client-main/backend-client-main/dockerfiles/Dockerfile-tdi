# Establece los argumentos
ARG IMG_VERSION

# Use la imagen oficial de PHP según el argumento
FROM php:${IMG_VERSION}

# Install Packages
RUN apt-get update -y && apt-get install -qqy \
    git unzip nano wget\
    libfreetype-dev \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libaio1 \  
    libicu-dev \  
    zlib1g-dev \
    libzip-dev \
    libwebp-dev \
    libxml2-dev \
    && apt-get clean autoclean && apt-get autoremove --yes &&  rm -rf /var/lib/{apt,dpkg,cache,log}/
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Install PHP extension
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install -j$(nproc) zip \
    && docker-php-ext-enable gd \
    && docker-php-ext-configure intl \
    && docker-php-ext-install intl \
    && docker-php-ext-enable intl \
    && docker-php-ext-install mysqli \
    && docker-php-ext-enable mysqli \
    && docker-php-ext-install pdo pdo_mysql \
    && docker-php-ext-enable pdo_mysql \
    && docker-php-ext-install soap \
    && docker-php-ext-enable soap

ADD dockerfiles/files/ioncube_loader_lin_8.1.so /usr/local/lib/php/extensions
RUN echo "zend_extension=/usr/local/lib/php/extensions/ioncube_loader_lin_8.1.so" > /usr/local/etc/php/conf.d/ioncube.ini

# Crea el directorio de trabajo y copia los archivos
WORKDIR /sistema
COPY . .
COPY /dockerfiles/config-tdi/.env ./.env
COPY /dockerfiles/config-tdi/.htaccess ./public/.htaccess

# Config Apache
COPY /dockerfiles/config-tdi/000-default.conf /etc/apache2/sites-enabled/000-default.conf
COPY /dockerfiles/config-tdi/apache2.conf /etc/apache2/apache2.conf
RUN a2enmod rewrite
RUN service apache2 restart

# Ejecuta el comando de instalación de paquetes de Composer
RUN composer install

# Otorga permisos de lectura, escritura y ejecución
RUN chown -R www-data:www-data /sistema/public /sistema/writable

# Expone los puertos
EXPOSE 80 443